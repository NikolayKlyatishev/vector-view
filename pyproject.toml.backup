[tool.poetry]
name = "vector-view"
version = "1.0.0"
description = "A modern web interface for visualizing and interacting with vector databases in RAG systems"
authors = ["Vector View Contributors <your-email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/your-username/vector-view"
repository = "https://github.com/your-username/vector-view.git"
documentation = "https://github.com/your-username/vector-view#readme"
keywords = ["rag", "vector-database", "chromadb", "flask", "visualization", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

[tool.poetry.dependencies]
python = "^3.9"
flask = "^3.0.0"
chromadb = "^0.4.22"
sentence-transformers = "^2.2.2"
numpy = "^1.24.0"
pandas = "^2.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^7.0.0"
flake8 = "^7.0.0"
black = "^25.0.0"
isort = "^6.0.0"
pre-commit = "^4.0.0"

[tool.poetry.scripts]
vector-view = "vector_view.app:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.packages]]
include = "vector_view"
from = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=src/vector_view --cov-report=html --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/vector_view"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]